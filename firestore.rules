rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can create their own user document, and only update/delete their own.
    // Allow authenticated users to read any user profile (needed for displaying collaborators)
    // Allow authenticated users to query users by email (needed for invitations)
    match /users/{userId} {
      allow read: if request.auth != null; // Any authenticated user can read user profiles
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null; // Allow querying users collection
    }
    
    // Vaults can be created by any authenticated user.
    // They can be read, updated, or deleted only by the owner or authorized users.
    // Users with pending invitations can update to add themselves to authorizedUsers
    match /vaults/{vaultId} {
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow read: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         request.auth.uid in resource.data.authorizedUsers);
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow update: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         request.auth.uid in resource.data.authorizedUsers ||
         // Allow update if user is accepting an invitation (adding themselves to authorizedUsers)
         (request.auth.uid in request.resource.data.authorizedUsers && 
          !(request.auth.uid in resource.data.authorizedUsers)));
    }
    
    // Share invitations - can be created by vault owners, read by invitees
    match /shareInvites/{inviteId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null;
    }
    
    // Vault permissions - manage collaborator permissions
    match /vaultPermissions/{permissionId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null;
    }
    
    // Share links - generate and manage shareable links
    match /shareLinks/{linkId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null;
    }
    
    // Notifications - any authenticated user can create notifications for others
    // Users can only read, update, and delete their own notifications
    match /notifications/{notificationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}